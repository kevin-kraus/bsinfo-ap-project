plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'eu.bsinfo.group2'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

apply plugin: 'jacoco'

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled false
	}
}

check.dependsOn jacocoTestReport

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	compile 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testCompile group: 'junit', name: 'junit', version: '4.11'
}

sourceSets {
	main {
		java.srcDir "src/main/java"
		resources.srcDir "src/main/resources"
	}

	test {
		java.srcDir "src/test/java"
		resources.srcDir "src/test/resources"
	}

	integration {
		java.srcDir "src/integration/java"
		resources.srcDir "src/integration/resources"
		output.resourcesDir = file("build/classes/integrationTest")
		compileClasspath += sourceSets.test.runtimeClasspath
		runtimeClasspath += sourceSets.integration.compileClasspath
	}
}

test {
	description = "Runs all unit tests defined with JUnit."
	group = "testing"
	finalizedBy "jacocoTestReport"
}

tasks.withType(Test) {
	useJUnitPlatform()
	testLogging.showStandardStreams = true
}

task integrationTest(type: Test) {
	description = "Runs the integration tests defined with JUnit."
	group = "testing"
	useJUnitPlatform {
		includeTags "IntegrationTest"
	}
	testClassesDirs = sourceSets.integration.output.classesDirs
	classpath = sourceSets.integration.runtimeClasspath
}

task jacocoIntegrationTestReport(type: JacocoReport, dependsOn: [test]) {
	description = "Generates jacodo code coverage report for integration tests."
	group = "reporting"
	executionData integrationTest
	sourceSets sourceSets.main
	reports {
		xml.enabled = true
		html.enabled = false
	}
}

task allTestReport(type: JacocoReport) {
	description = "Generates jacodo code coverage report for integration and unit tests."
	group = "reporting"
	executionData test, integrationTest
	sourceSets sourceSets.main
	reports {
		xml.enabled = true
		html.enabled = false
	}
}


check.dependsOn(integrationTest)
integrationTest.mustRunAfter(test)

test.finalizedBy jacocoTestReport
integrationTest.finalizedBy jacocoIntegrationTestReport
